# Generated by Django 5.2.6 on 2025-09-28 14:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PrediccionMorosidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título de la predicción', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de la predicción')),
                ('modelo_usado', models.CharField(choices=[('regresion_logistica', 'Regresión Logística'), ('random_forest', 'Random Forest'), ('xgboost', 'XGBoost'), ('red_neuronal', 'Red Neuronal'), ('ensemble', 'Ensemble de Modelos')], help_text='Modelo de IA utilizado', max_length=20)),
                ('nivel_confianza', models.CharField(choices=[('bajo', 'Bajo (60-70%)'), ('medio', 'Medio (70-80%)'), ('alto', 'Alto (80-90%)'), ('muy_alto', 'Muy Alto (90-95%)')], help_text='Nivel de confianza del modelo', max_length=10)),
                ('fecha_prediccion', models.DateTimeField(auto_now_add=True, help_text='Fecha cuando se realizó la predicción')),
                ('periodo_predicho', models.CharField(help_text='Período que se está prediciendo', max_length=100)),
                ('datos_entrada', models.JSONField(help_text='Datos utilizados como entrada para la predicción')),
                ('resultados', models.JSONField(help_text='Resultados de la predicción en formato JSON')),
                ('total_residentes_analizados', models.PositiveIntegerField(default=0, help_text='Total de residentes analizados')),
                ('residentes_riesgo_alto', models.PositiveIntegerField(default=0, help_text='Residentes con alto riesgo de morosidad')),
                ('residentes_riesgo_medio', models.PositiveIntegerField(default=0, help_text='Residentes con medio riesgo de morosidad')),
                ('precision_modelo', models.DecimalField(decimal_places=2, default=0, help_text='Precisión del modelo (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('parametros_modelo', models.JSONField(default=dict, help_text='Parámetros utilizados en el modelo')),
                ('metricas_evaluacion', models.JSONField(default=dict, help_text='Métricas de evaluación del modelo')),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicciones_morosidad', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Predicción de Morosidad',
                'verbose_name_plural': 'Predicciones de Morosidad',
                'ordering': ['-fecha_prediccion'],
            },
        ),
        migrations.CreateModel(
            name='ReporteFinanciero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título del reporte', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del reporte')),
                ('tipo', models.CharField(choices=[('ingresos', 'Ingresos'), ('egresos', 'Egresos'), ('balance', 'Balance General'), ('estado_cuenta', 'Estado de Cuenta'), ('morosidad', 'Morosidad'), ('presupuesto', 'Presupuesto')], help_text='Tipo de reporte financiero', max_length=20)),
                ('periodo', models.CharField(choices=[('diario', 'Diario'), ('semanal', 'Semanal'), ('mensual', 'Mensual'), ('trimestral', 'Trimestral'), ('anual', 'Anual')], help_text='Período del reporte', max_length=20)),
                ('formato', models.CharField(choices=[('json', 'JSON'), ('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV')], default='json', help_text='Formato de salida', max_length=10)),
                ('fecha_inicio', models.DateField(help_text='Fecha de inicio del período')),
                ('fecha_fin', models.DateField(help_text='Fecha de fin del período')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True, help_text='Fecha cuando se generó el reporte')),
                ('datos', models.JSONField(help_text='Datos del reporte en formato JSON')),
                ('total_registros', models.PositiveIntegerField(default=0, help_text='Total de registros procesados')),
                ('filtros_aplicados', models.JSONField(default=dict, help_text='Filtros aplicados al reporte')),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_financieros', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte Financiero',
                'verbose_name_plural': 'Reportes Financieros',
                'ordering': ['-fecha_generacion'],
            },
        ),
        migrations.CreateModel(
            name='ReporteSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título del reporte', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del reporte')),
                ('tipo', models.CharField(choices=[('accesos', 'Accesos al Condominio'), ('incidentes', 'Incidentes de Seguridad'), ('alertas', 'Alertas del Sistema'), ('patrones', 'Patrones de Comportamiento'), ('auditoria', 'Auditoría de Seguridad')], help_text='Tipo de reporte de seguridad', max_length=20)),
                ('periodo', models.CharField(choices=[('hora', 'Última Hora'), ('dia', 'Últimas 24 Horas'), ('semana', 'Última Semana'), ('mes', 'Último Mes'), ('personalizado', 'Período Personalizado')], help_text='Período del reporte', max_length=20)),
                ('fecha_inicio', models.DateTimeField(help_text='Fecha y hora de inicio')),
                ('fecha_fin', models.DateTimeField(help_text='Fecha y hora de fin')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True, help_text='Fecha cuando se generó el reporte')),
                ('datos', models.JSONField(help_text='Datos del reporte en formato JSON')),
                ('total_eventos', models.PositiveIntegerField(default=0, help_text='Total de eventos registrados')),
                ('eventos_criticos', models.PositiveIntegerField(default=0, help_text='Número de eventos críticos')),
                ('alertas_generadas', models.PositiveIntegerField(default=0, help_text='Número de alertas generadas')),
                ('filtros_aplicados', models.JSONField(default=dict, help_text='Filtros aplicados al reporte')),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_seguridad', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte de Seguridad',
                'verbose_name_plural': 'Reportes de Seguridad',
                'ordering': ['-fecha_generacion'],
            },
        ),
        migrations.CreateModel(
            name='ReporteUsoAreas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título del reporte', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del reporte')),
                ('area', models.CharField(choices=[('gimnasio', 'Gimnasio'), ('piscina', 'Piscina'), ('salon_eventos', 'Salón de Eventos'), ('estacionamiento', 'Estacionamiento'), ('areas_verdes', 'Áreas Verdes'), ('todas', 'Todas las Áreas')], help_text='Área común a reportar', max_length=20)),
                ('periodo', models.CharField(choices=[('dia', 'Diario'), ('semana', 'Semanal'), ('mes', 'Mensual'), ('trimestre', 'Trimestral'), ('ano', 'Anual')], help_text='Período del reporte', max_length=20)),
                ('metrica_principal', models.CharField(choices=[('ocupacion', 'Tasa de Ocupación'), ('reservas', 'Número de Reservas'), ('tiempo_promedio', 'Tiempo Promedio de Uso'), ('patrones_horarios', 'Patrones Horarios'), ('comparativo', 'Comparativo Periódico')], help_text='Métrica principal', max_length=20)),
                ('fecha_inicio', models.DateField(help_text='Fecha de inicio del período')),
                ('fecha_fin', models.DateField(help_text='Fecha de fin del período')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True, help_text='Fecha cuando se generó el reporte')),
                ('datos', models.JSONField(help_text='Datos del reporte en formato JSON')),
                ('total_reservas', models.PositiveIntegerField(default=0, help_text='Total de reservas en el período')),
                ('horas_ocupacion', models.DecimalField(decimal_places=2, default=0, help_text='Horas totales de ocupación', max_digits=8)),
                ('tasa_ocupacion_promedio', models.DecimalField(decimal_places=2, default=0, help_text='Tasa de ocupación promedio (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('filtros_aplicados', models.JSONField(default=dict, help_text='Filtros aplicados al reporte')),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_uso_areas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte de Uso de Áreas',
                'verbose_name_plural': 'Reportes de Uso de Áreas',
                'ordering': ['-fecha_generacion'],
            },
        ),
    ]
